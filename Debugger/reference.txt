INTRODUCE
I used to debug C or C++ program by console, like cdb, kd when I worked in windows system. About one year ago, I began to learn Java. But I did not find a suitable debug tool in console (JDB is a good chose for someone else but I did not used to it.) I began trying to find a debugger working in console like cdb or kd, but I did not find a suitable tool, so I decided to make a debug tool of my own, called Larva (I like this name which from an interesting cartoon). It`s my hope to support Hotspot and Dalvik virtual machines.

Larva, in present, has several function belowing:
breakpoints (method/line/access/modify points, create, delete, enable, disable, etc.) 
sources code manage (append, delete, etc.) 
threads (query, switch, suspend, resume, etc.) 
stack (query frame, switch frame, etc.) 
exeutes (source code debug, step over, step into, etc.) 
class (query, query field, query method, etc.) 
variant (print, field, locals, etc.) 
template (support list, map, vector, queue, etc.) 
monitor (wait chain, wait object, etc.) 
virtual machin information 
script called Larva script (support standard java expression excepting new object and invoking method)

Of course, there are a lot of debug in Larva and it do need to be perfected. There is a reference about Larva in project, you can read it if you are interested in it. I`ll thank for your advices or debug report (runbox@163.com) 

START DEBUG
  Deubgged target is started by using standard remote socket connect, debugger(Larva) only support socket in present but I`ll support other method (virtual memory, etc.) You can build Larva project to create standard class files or JAR package.
  Larva need two arguments:
  -address debugged address formated IP:port
  -script initialize Larva script file 
There are two examples for both Hotspot and Dalvik:
Hotpot Virtual Machine
debugged: java -agentlib:jdwp=transport=dt_socket,address=localhost:1025,server=y,suspend=y -classpath ".\out\production\Demo" Demo
debugger: java -classpath "D:\Program Files\Java\jdk1.8.0_45\lib\tools.jar" com.runbox.debug.Debugger -address localhost:1025 -script .\debug.jdb
Dalvik Virtual machine (To implement debug android java we need to do several steps belowing):
debugged:
1. Startup app which has been built debug version
2. Search PID of the running app by adb shell (adb ps | grep packageName)
3. Redirect JDWP port (adb forward tcp:localport jdwp:PID)
There is a debug.cmd batch file I has been written which can be as a reference
debugger: java -classpath "D:\Program Files\Java\jdk1.8.0_45\lib\tools.jar" com.runbox.debug.Debugger -address localhost:1025 -script .\debug.jdb

COMMAND (Alphabet order)
block command
breakpoint command
class command
execute command
help command
machine command
monitor command
source command
stack command
template command
thread command
variant command


